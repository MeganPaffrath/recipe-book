{"version":3,"sources":["components/Recipe.jsx","components/App.jsx","index.js"],"names":["Recipe","i","recipe","ingredients","instructions","ovenTemp","categories","prepTime","cookTime","totalTime","keyInst","categoryStr","keyIngredient","length","console","log","className","map","item","units","value","step","App","useState","type","setType","makeRecipe","ingr","onChange","input","target","id","placeholder","size","onClick","recipes","search","filter","toLowerCase","includes","ingredient","filterRecipes","ReactDOM","render","document","getElementById"],"mappings":"6LAEe,SAASA,EAAT,GAA2G,IAKpHC,EAL0BC,EAAyF,EAAzFA,OAAQC,EAAiF,EAAjFA,YAAaC,EAAoE,EAApEA,aAAcC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,UACvGC,EAAU,EACVC,EAAc,GACdC,EAAgB,EAGpB,GAAIN,EAAWO,OAAS,EACtB,IAAKZ,EAAI,EAAGA,EAAKK,EAAWO,OAAS,EAAIZ,IACvCa,QAAQC,IAAIT,EAAWL,IACvBU,EAAcA,EAAcL,EAAWL,GAAK,KAQhD,OALAU,GAA4BL,EAAWA,EAAWO,OAAS,GAE3DC,QAAQC,IAAI,WAAaJ,GAIvB,sBAAKK,UAAU,SAAf,UACE,6BAAKd,IACL,mCACGG,EAAW,EACV,8BACE,uCAAUA,EAAV,eAEE,KACJ,4CAAeE,EAAf,oBAA0CC,EAA1C,UACA,6CAAgBC,EAAhB,UACA,6CAAgBE,QAEpB,8CACA,6BAEER,EAAYc,KAAK,SAACC,GAGhB,OAFAJ,QAAQC,IAAIG,GACZN,IACO,6BACW,UAAfM,EAAKC,MACJD,EAAKE,MAAQ,IAAMF,EAAKA,KAExBA,EAAKE,MAAQ,IAAMF,EAAKC,MAAQ,IAAMD,EAAKA,MAJ/B,OAASN,QAW7B,+CACA,6BACGR,EAAaa,KAAK,SAACI,GAElB,OADAX,IAEE,6BAA4BW,GAAnB,OAASX,W,MChDf,SAASY,IAAO,IAAD,EACJC,mBAAS,OADL,mBACrBC,EADqB,KACfC,EADe,KAG5B,SAASC,EAAWxB,GAClB,IAAMG,EAAWH,EAAOG,SAAWH,EAAOG,SAAW,EAErD,OAAO,cAACL,EAAD,CAELE,OAAQA,EAAOA,OACfC,YAAaD,EAAOC,YACpBwB,KAAMzB,EAAOyB,KACbvB,aAAcF,EAAOE,aACrBE,WAAYJ,EAAOI,WACnBD,SAAUA,EACVE,SAAUL,EAAOK,SACjBC,SAAUN,EAAOM,SACjBC,UAAWP,EAAOO,WATbP,EAAOA,QAkDhB,OACE,gCACE,mCACE,iDACA,qDAEF,uBACA,iCACA,uBAAO0B,SAbX,SAAsBC,GACpBJ,EAAQI,EAAMC,OAAOV,QAYYI,KAAK,SAASO,GAAG,WAAWX,MAAOI,EAAMQ,YAAY,8CAA8CC,KAAK,SAEvI,uBACA,mCACE,wBAAQC,QAAS,kBAAMT,EAAQ,SAA/B,mBACA,wBAAQS,QAAS,kBAAMT,EAAQ,UAA/B,oBACA,wBAAQS,QAAS,kBAAMT,EAAQ,QAA/B,oBAGF,uBAGU,QAATD,EACCW,EAAQlB,IAAIS,GA1DlB,SAAuBS,EAASC,GA6B9B,OA5BmBD,EAAQE,QAAO,SAASnC,GAEzC,GAAIA,EAAOA,OAAOoC,cAAcC,SAASH,EAAOE,eAC9C,OAAO,EAGT,IAAK,IAAME,KAActC,EAAOC,YAC9B,GAAID,EAAOC,YAAYqC,GAAYF,cAAcC,SAASH,EAAOE,eAC/D,OAAO,EAKX,IAAK,IAAMd,KAAQtB,EAAOI,WACxB,GAAIJ,EAAOI,WAAWkB,GAAMc,cAAcC,SAASH,EAAOE,eACxD,OAAO,EAKX,OAAIpC,EAAOG,WAAa+B,KAsCpBK,CAAcN,EAASX,GAAMP,IAAIS,MC/E3CgB,IAASC,OAAO,cAACrB,EAAD,IAASsB,SAASC,eAAe,U","file":"static/js/main.d9ed5637.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Recipe({recipe, ingredients, instructions, ovenTemp, categories, prepTime, cookTime, totalTime}) {\n  let keyInst = 0;\n  let categoryStr = \"\";\n  let keyIngredient = 0;\n\n  let i;\n  if (categories.length > 1) {\n    for (i = 0; i < (categories.length - 1); i++) {\n      console.log(categories[i]);\n      categoryStr = categoryStr + categories[i] + \", \";\n    }\n  }\n  categoryStr = categoryStr + categories[categories.length - 1];\n\n  console.log(\"STRING: \" + categoryStr);\n\n\n  return (\n    <div className=\"recipe\">\n      <h1>{recipe}</h1>\n      <center>\n        {ovenTemp > 0 ? (\n          <div>\n            <p>Oven: {ovenTemp}ËšF</p>\n          </div>\n          ) : null}\n          <p>Prep Time: {prepTime} min, Cook Time: {cookTime} min</p>\n          <p>Total Time: {totalTime} min</p>\n          <p>Categories: {categoryStr}</p>\n      </center>\n      <h2>Ingredients:</h2>\n      <ul>\n      {\n        ingredients.map( (item) => {\n          console.log(item);\n          keyIngredient++;\n          return <li key={\"ingr\" + keyIngredient}>\n            {item.units === \"count\" ? (\n              item.value + \" \" + item.item\n            ): (\n              item.value + \" \" + item.units + \" \" + item.item\n            )}\n          </li>\n\n        })\n      }\n      </ul>\n      <h2>Instructions:</h2>\n      <ol>\n        {instructions.map( (step) => {\n          keyInst++;\n          return (\n            <li key={\"inst\" + keyInst}>{step}</li>\n          )\n        \n        }\n        )}\n      </ol>\n      \n    </div>\n    \n\n  )\n}","import React, { useState } from \"react\";\nimport recipes from \"../recipes.json\";\nimport Recipe from \"./Recipe\";\n\nimport \"./app.css\";\n\nexport default function App() {\n  const [type, setType] = useState(\"all\");\n\n  function makeRecipe(recipe) {\n    const ovenTemp = recipe.ovenTemp ? recipe.ovenTemp : 0\n\n    return <Recipe \n      key={recipe.recipe}\n      recipe={recipe.recipe}\n      ingredients={recipe.ingredients}\n      ingr={recipe.ingr}\n      instructions={recipe.instructions}\n      categories={recipe.categories}\n      ovenTemp={ovenTemp}\n      prepTime={recipe.prepTime}\n      cookTime={recipe.cookTime}\n      totalTime={recipe.totalTime}\n    />\n  }\n\n  function filterRecipes(recipes, search) {\n    const recipesNew = recipes.filter(function(recipe) {\n      // Find by name\n      if (recipe.recipe.toLowerCase().includes(search.toLowerCase())) {\n        return true;\n      }\n      // Find by Ingredient\n      for (const ingredient in recipe.ingredients) {\n        if (recipe.ingredients[ingredient].toLowerCase().includes(search.toLowerCase())) {\n          return true;\n        }\n      }\n\n      // Find by type\n      for (const type in recipe.categories) {\n        if (recipe.categories[type].toLowerCase().includes(search.toLowerCase())) {\n          return true;\n        }\n      }\n\n      // find by temp\n      if (recipe.ovenTemp === search) {\n        return true;\n      }\n\n      // Otherwise\n      return false;\n    });\n    \n    return recipesNew;\n  }\n\n  function handleChange(input) {\n    setType(input.target.value);\n  }\n\n\n  return (\n    <div>\n      <center>\n        <h1>Megan's Recipes</h1>\n        <p>meganpaffrath.com</p>\n      </center>\n      <br/>\n      <center>\n      <input onChange={handleChange} type=\"search\" id=\"mySearch\" value={type} placeholder=\"Search by title/ingredient/type/temperature\" size=\"40\"/>\n      </center>\n      <br/>\n      <center>\n        <button onClick={() => setType(\"meal\")}>meals</button>\n        <button onClick={() => setType(\"snack\")}>snacks</button>\n        <button onClick={() => setType(\"all\")}>all</button>\n      </center>\n\n      <br/>\n      \n\n      {type === \"all\" ? (\n        recipes.map(makeRecipe)\n      ) : filterRecipes(recipes, type).map(makeRecipe)}\n\n    </div>\n    \n  )\n}","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}