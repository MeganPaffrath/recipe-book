{"version":3,"sources":["components/Recipe.jsx","components/App.jsx","index.js"],"names":["Recipe","i","recipe","ingredients","instructions","ovenTemp","categories","keyIng","keyInst","categoryStr","length","console","log","className","map","ingredient","step","App","useState","type","setType","makeRecipe","onChange","input","target","value","id","placeholder","size","onClick","recipes","search","filter","toLowerCase","includes","filterRecipes","ReactDOM","render","document","getElementById"],"mappings":"6LAEe,SAASA,EAAT,GAA4E,IAKrFC,EAL0BC,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WACvEC,EAAS,EACTC,EAAU,EACVC,EAAc,GAGlB,GAAIH,EAAWI,OAAS,EACtB,IAAKT,EAAI,EAAGA,EAAKK,EAAWI,OAAS,EAAIT,IACvCU,QAAQC,IAAIN,EAAWL,IACvBQ,EAAcA,EAAcH,EAAWL,GAAK,KAQhD,OALAQ,GAA4BH,EAAWA,EAAWI,OAAS,GAE3DC,QAAQC,IAAI,WAAaH,GAIvB,sBAAKI,UAAU,SAAf,UACE,6BAAKX,IACL,mCACGG,EAAW,EACV,8BACE,uCAAUA,EAAV,eAEE,KACJ,6CAAgBI,QAEpB,8CACA,6BACCN,EAAYW,KAAK,SAACC,GAEjB,OADAR,IAEE,6BAAwBQ,GAAf,IAAMR,QAInB,+CACA,6BACGH,EAAaU,KAAK,SAACE,GAElB,OADAR,IAEE,6BAA4BQ,GAAnB,OAASR,W,MCtCf,SAASS,IAAO,IAAD,EACJC,mBAAS,OADL,mBACrBC,EADqB,KACfC,EADe,KAG5B,SAASC,EAAWnB,GAClB,IAAMG,EAAWH,EAAOG,SAAWH,EAAOG,SAAW,EAErD,OAAO,cAACL,EAAD,CAELE,OAAQA,EAAOA,OACfC,YAAaD,EAAOC,YACpBC,aAAcF,EAAOE,aACrBE,WAAYJ,EAAOI,WACnBD,SAAUA,GALLH,EAAOA,QA8ChB,OACE,gCACE,iDACA,uBACA,iCACA,uBAAOoB,SAVX,SAAsBC,GACpBH,EAAQG,EAAMC,OAAOC,QASYN,KAAK,SAASO,GAAG,WAAWD,MAAON,EAAMQ,YAAY,8CAA8CC,KAAK,SAEvI,uBACA,mCACE,wBAAQC,QAAS,kBAAMT,EAAQ,SAA/B,mBACA,wBAAQS,QAAS,kBAAMT,EAAQ,UAA/B,oBACA,wBAAQS,QAAS,kBAAMT,EAAQ,QAA/B,oBAGF,uBAGU,QAATD,EACCW,EAAQhB,IAAIO,GAvDlB,SAAuBS,EAASC,GA6B9B,OA5BmBD,EAAQE,QAAO,SAAS9B,GAEzC,GAAIA,EAAOA,OAAO+B,cAAcC,SAASH,EAAOE,eAC9C,OAAO,EAGT,IAAK,IAAMlB,KAAcb,EAAOC,YAC9B,GAAID,EAAOC,YAAYY,GAAYkB,cAAcC,SAASH,EAAOE,eAC/D,OAAO,EAKX,IAAK,IAAMd,KAAQjB,EAAOI,WACxB,GAAIJ,EAAOI,WAAWa,GAAMc,cAAcC,SAASH,EAAOE,eACxD,OAAO,EAKX,OAAI/B,EAAOG,WAAa0B,KAmCpBI,CAAcL,EAASX,GAAML,IAAIO,MCxE3Ce,IAASC,OAAO,cAACpB,EAAD,IAASqB,SAASC,eAAe,U","file":"static/js/main.c9afc339.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Recipe({recipe, ingredients, instructions, ovenTemp, categories}) {\n  let keyIng = 0;\n  let keyInst = 0;\n  let categoryStr = \"\";\n\n  let i;\n  if (categories.length > 1) {\n    for (i = 0; i < (categories.length - 1); i++) {\n      console.log(categories[i]);\n      categoryStr = categoryStr + categories[i] + \", \";\n    }\n  }\n  categoryStr = categoryStr + categories[categories.length - 1];\n\n  console.log(\"STRING: \" + categoryStr);\n\n\n  return (\n    <div className=\"recipe\">\n      <h1>{recipe}</h1>\n      <center>\n        {ovenTemp > 0 ? (\n          <div>\n            <p>Oven: {ovenTemp}ËšF</p>\n          </div>\n          ) : null}\n          <p>Categories: {categoryStr}</p>\n      </center>\n      <h2>Ingredients:</h2>\n      <ul>\n      {ingredients.map( (ingredient) => {\n        keyIng++;\n        return (\n          <li key={\"i\" + keyIng}>{ingredient}</li> \n        )\n      })}\n      </ul>\n      <h2>Instructions:</h2>\n      <ol>\n        {instructions.map( (step) => {\n          keyInst++;\n          return (\n            <li key={\"inst\" + keyInst}>{step}</li>\n          )\n        \n        }\n        )}\n      </ol>\n      \n    </div>\n    \n\n  )\n}","import React, { useState } from \"react\";\nimport recipes from \"../recipes.json\";\nimport Recipe from \"./Recipe\";\n\nimport \"./app.css\";\n\nexport default function App() {\n  const [type, setType] = useState(\"all\");\n\n  function makeRecipe(recipe) {\n    const ovenTemp = recipe.ovenTemp ? recipe.ovenTemp : 0\n\n    return <Recipe \n      key={recipe.recipe}\n      recipe={recipe.recipe}\n      ingredients={recipe.ingredients}\n      instructions={recipe.instructions}\n      categories={recipe.categories}\n      ovenTemp={ovenTemp}\n    />\n  }\n\n  function filterRecipes(recipes, search) {\n    const recipesNew = recipes.filter(function(recipe) {\n      // Find by name\n      if (recipe.recipe.toLowerCase().includes(search.toLowerCase())) {\n        return true;\n      }\n      // Find by Ingredient\n      for (const ingredient in recipe.ingredients) {\n        if (recipe.ingredients[ingredient].toLowerCase().includes(search.toLowerCase())) {\n          return true;\n        }\n      }\n\n      // Find by type\n      for (const type in recipe.categories) {\n        if (recipe.categories[type].toLowerCase().includes(search.toLowerCase())) {\n          return true;\n        }\n      }\n\n      // find by temp\n      if (recipe.ovenTemp === search) {\n        return true;\n      }\n\n      // Otherwise\n      return false;\n    });\n    \n    return recipesNew;\n  }\n\n  function handleChange(input) {\n    setType(input.target.value);\n  }\n\n\n  return (\n    <div>\n      <h1>Megan's Recipes</h1>\n      <br/>\n      <center>\n      <input onChange={handleChange} type=\"search\" id=\"mySearch\" value={type} placeholder=\"Search by title/ingredient/type/temperature\" size=\"40\"/>\n      </center>\n      <br/>\n      <center>\n        <button onClick={() => setType(\"meal\")}>meals</button>\n        <button onClick={() => setType(\"snack\")}>snacks</button>\n        <button onClick={() => setType(\"all\")}>all</button>\n      </center>\n\n      <br/>\n      \n\n      {type === \"all\" ? (\n        recipes.map(makeRecipe)\n      ) : filterRecipes(recipes, type).map(makeRecipe)}\n\n    </div>\n    \n  )\n}","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}